% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_item_expected_scores.R
\name{compute_item_expected_scores}
\alias{compute_item_expected_scores}
\alias{compute_item_expected_scores.rstylesTest}
\alias{compute_item_expected_scores.rstylesItem}
\title{Generating expected distribution of item scores}
\usage{
compute_item_expected_scores(x, vcov)

\method{compute_item_expected_scores}{rstylesTest}(x, vcov)

\method{compute_item_expected_scores}{rstylesItem}(x, vcov = diag(ncol(x$scoringMatrix)))
}
\arguments{
\item{x}{an object of class \emph{rstylesItem} or \emph{rstylesTest}}

\item{vcov}{a covariance matrix of latent traits (in line with item's scoring
matrix); if not provided uncorrelated standard normal is used}
}
\value{
A table
}
\description{
Function generates expected distribution of item scores given
item object constructed using \code{\link{make_item}} or test (i.e. list of
items) object constructed using \code{\link{make_test}} and covariance matrix
of latent traits, assuming multivariate-normal distribution of latent traits.
}
\examples{
itemGPCM <- make_item(scoringMatrix = make_scoring_matrix_aem(1:5, "gpcm")[, -4],
                      slopes = c(i = 1, m = 2, e = 3),
                      intercepts = cumsum(c(0, seq(-0.5, 0.5, length.out = 4))),
                      mode = "gpcm")
vcov <- matrix(c( 1,    0.5, -0.5,
                  0.5,  1,   -0.25,
                 -0.5, -0.25, 1),
               nrow = 3, dimnames = list(c("i", "m", "e"), c("i", "m", "e")))
compute_item_expected_scores(itemGPCM) # orthogonal, standard-normal latent traits
compute_item_expected_scores(itemGPCM, vcov)

itemIRTree <- make_item(scoringMatrix = make_scoring_matrix_aem(1:5, "mae"),
                        slopes = c(m = 1, a = 1, e = 1),
                        intercepts = c(m1 = 0, a1 = 0, e1 = 0),
                        mode = "irtree")
vcovIRTree <- vcov
colnames(vcovIRTree) <- rownames(vcovIRTree) <- c("a", "m", "e")
compute_item_expected_scores(itemIRTree) # orthogonal, standard-normal latent traits
compute_item_expected_scores(itemIRTree, vcovIRTree)

sM <- make_scoring_matrix_aem(1:5, "gpcm")[, -4]
test <- make_test(sM,
                  generate_slopes(11, sM, c(1, 2, 3)),
                  generate_intercepts(11, sM,
                                      FUNd = seq,
                                      argsd = list(from = -1.5, to = 1.5,
                                      length.out = 11),
                                      FUNt = seq,
                                      argst = list(from = -1.5, to = 1.5,
                                      length.out = 4)),
                  "gpcm")
sapply(compute_item_expected_scores(test, vcov), identity)
}
\seealso{
\code{\link{make_item}}
}
